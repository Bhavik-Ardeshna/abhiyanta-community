{"version":3,"sources":["Pages/Home.js","Pages/Faq.js","Pages/NotFound.js","Componnts/TeamMemberCard.js","Pages/Team.js","Componnts/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Home","src","process","alt","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Faq","classes","className","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","justifyContent","flexGrow","image","height","objectFit","margin","display","NotFound","Container","Box","Button","style","href","color","maxWidth","ImgMediaCard","props","Card","CardActionArea","CardMedia","component","member","name","title","CardContent","gutterBottom","variant","CardActions","size","Rating","value","rating","precision","readOnly","team","rank","Team","Grid","container","spacing","map","item","xs","sm","md","TeamMemberCard","NavBar","exact","path","About","Notfound","to","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6d5201e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Home() {\n  return (\n    <div>\n      <header>\n        <img\n          src={`${process.env.PUBLIC_URL}/Asserts/abhiyanta_logo.png`}\n          alt=\"logo\"\n        />\n        <p>Site Under Construction</p>\n        <p>Great things coming soon...</p>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(25),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function Faq() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Accordion TransitionProps={{ unmountOnExit: true }}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Accordion 1</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion TransitionProps={{ unmountOnExit: true }}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Accordion 2</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion TransitionProps={{ unmountOnExit: true }}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n        >\n          <Typography className={classes.heading}>\n            Disabled Accordion\n          </Typography>\n        </AccordionSummary>\n      </Accordion>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Button, Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    justifyContent: \"center\",\n    flexGrow: 1,\n  },\n  image: {\n    width: \"90%\",\n    height: \"53%\",\n    objectFit: \"cover\",\n    margin: \"auto\",\n    display: \"flex\",\n  },\n});\n\nfunction NotFound() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Box>\n        <img className={classes.image} src={process.env.PUBLIC_URL + '/Asserts/404.png'} alt=\"404 \" />\n        <Button\n          style={{ margin: \"auto\", display: \"flex\", fontSize: \"140%\" }}\n          href=\"/\"\n          color=\"primary\"\n        >\n          Go to Home\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Rating from \"@material-ui/lab/Rating\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nfunction ImgMediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt={props.member.name}\n            height=\"140\"\n            image={props.member.image}\n            title={props.member.name}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.member.name}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button href=\"#\" size=\"small\" color=\"primary\">\n            More Details\n          </Button>\n          <Rating\n            value={props.member.rating}\n            size={\"small\"}\n            precision={0.5}\n            readOnly\n          />\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n\nexport default ImgMediaCard;\n","import React from \"react\";\n\nimport TeamMemberCard from \"../Componnts/TeamMemberCard\";\nimport { Grid, Container } from \"@material-ui/core\";\n\nconst team = [\n  {\n    rank: 0,\n    rating: 2.5,\n    name: \"Rishav\",\n    image:\n      \"https://ssl.gstatic.com/analytics/20200901-00/app/static/mobile/ZeroStateIcons/zero-state-users.png\",\n  },\n  {\n    rank: 1,\n    rating: 4,\n    name: \"Parth\",\n    image:\n      \"https://ssl.gstatic.com/analytics/20200901-00/app/static/mobile/ZeroStateIcons/zero-state-users.png\",\n  },\n  {\n    rank: 0,\n    rating: 2.5,\n    name: \"Rishav\",\n    image:\n      \"https://ssl.gstatic.com/analytics/20200901-00/app/static/mobile/ZeroStateIcons/zero-state-users.png\",\n  },\n  {\n    rank: 1,\n    rating: 4,\n    name: \"Parth\",\n    image:\n      \"https://ssl.gstatic.com/analytics/20200901-00/app/static/mobile/ZeroStateIcons/zero-state-users.png\",\n  },\n];\n\nfunction Team() {\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        {team.map((member) => (\n          <Grid item xs={12} sm={6} md={4}>\n            <TeamMemberCard member={member} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Team;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Home from \"../Pages/Home\";\nimport About from \"../Pages/About\";\nimport Faq from \"../Pages/Faq\";\nimport Notfound from \"../Pages/NotFound\";\nimport Team from \"../Pages/Team\";\n\nfunction NavBar() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/faq\" component={Faq} />\n        <Route exact path=\"/team\" component={Team} />\n        <Route path=\"/NotFound\" component={Notfound} />\n        <Redirect to=\"/NotFound\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport NavBar from \"./Componnts/NavBar\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <BrowserRouter>\n        <NavBar />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}